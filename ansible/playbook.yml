- hosts: n8n
  become: true
  gather_facts: true
  vars:
    ansible_ssh_common_args: '-o ServerAliveInterval=60 -o ServerAliveCountMax=3'
    # Enable performance optimization for tiny VMs (set to false to disable)
    enable_performance_optimization: true

  roles:
    - role: performance_optimization
      when: enable_performance_optimization | default(true)
      tags: ['performance', 'optimization']

  pre_tasks:
    - name: Ensure apt cache is fresh
      apt:
        update_cache: true
      changed_when: false

  tasks:
    - name: Install base packages
      apt:
        name:
          - curl
          - git
          - ufw
          - ca-certificates
          - gnupg
        state: present

    - name: Configure UFW (allow SSH, HTTP, HTTPS)
      ufw:
        state: enabled
        policy: deny
      notify: Reload UFW
    - ufw:
        rule: allow
        name: OpenSSH
    - ufw:
        rule: allow
        port: "80"
        proto: tcp
    - ufw:
        rule: allow
        port: "443"
        proto: tcp

    - name: Create Docker GPG key directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: Download Docker GPG key
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Set Docker GPG key permissions
      file:
        path: /etc/apt/keyrings/docker.gpg
        mode: "0644"

    - name: Add Docker repository
      shell: |
        . /etc/os-release
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $UBUNTU_CODENAME stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        creates: /etc/apt/sources.list.d/docker.list

    - name: Update apt cache
      apt:
        update_cache: true
      changed_when: false

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Ensure Docker service is started and enabled
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add deploy user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Create app directory
      file:
        path: /opt/n8n
        state: directory
        mode: "0755"

    - name: Create local_files directory (for n8n mounts)
      file:
        path: /opt/n8n/local_files
        state: directory
        mode: "0775"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Place docker-compose.yml
      copy:
        src: roles/n8n/files/docker-compose.yml
        dest: /opt/n8n/docker-compose.yml
        mode: "0644"

    - name: Place Caddyfile
      copy:
        src: ../app/Caddyfile
        dest: /opt/n8n/Caddyfile
        mode: "0644"

    - name: Decrypt .env.sops (SOPS)
      delegate_to: localhost
      shell: sops --decrypt {{ playbook_dir }}/roles/n8n/templates/.env.sops
      register: envfile_decrypt
      changed_when: false

    - name: Write .env
      copy:
        content: "{{ envfile_decrypt.stdout }}"
        dest: /opt/n8n/.env
        mode: "0600"

    - name: Start/Update stack
      community.docker.docker_compose_v2:
        project_src: /opt/n8n
        state: present

  post_tasks:
    - name: Ensure vm.overcommit_memory is set to 0 (safer on 1GB host)
      sysctl:
        name: vm.overcommit_memory
        value: "0"
        state: present
        sysctl_file: /etc/sysctl.d/60-memory-optimization-override.conf
        reload: yes

  handlers:
    - name: Reload UFW
      command: ufw reload
